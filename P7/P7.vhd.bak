library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity P7 is 
	port(
		reloj: in std_logic;
		salida: inout std_logic_vector(3 downto 0);
		control: in std_logic_vector(2 downto 0)
	);
end P6;

architecture A_P7 of P7 is
	signal clk: std_logic;
	

	process(reloj)
	begin
		if rising_edge(clk) then
			if contadorSel < divisorSel then
				contadorSel <= contadorSel + 1;
			else
				contadorSel <= 0;
				selContador <= (selContador + 1) mod 4;
			end if;
			 
			 
			if contadorDigs < divisorDig then
				contadorDigs <= contadorDigs + 1;
			else
				contadorDigs <= 0;
				cntD0 <= (cntD0 + 1) mod 10;
				cntD1 <= (cntD1 + 1) mod 10;
				cntD2 <= (cntD2 + 1) mod 10;
				cntD3 <= (cntD3 + 1) mod 10;
			end if;
			 
			 
		end if;

	end process;

end A_P7;